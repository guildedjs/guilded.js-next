import Client from "../Client";
import Base from "./Base";
import { GatewayMessagePayload } from "./ClientGatewayHandler";

export enum MessageType {
    Default,
    System,
}

export default class Message extends Base {
    /** The id of the message. */
    id: string;
    /** The ID of the channel */
    channelId: string;
    /** The type of chat message. "system" messages are generated by Guilded, while "default" messages are user or bot-generated. */
    type = MessageType.Default;
    /** The content of the message */
    content = "";
    /** The ID of the messages that this is replying to. */
    replyMessageIds: string[] = [];
    /** If set, this message will only be seen by those mentioned or replied to. */
    isPrivate = false;
    /** The ID of the user who created this message (Note: If this event has createdByBotId or createdByWebhookId present, this field will still be populated, but can be ignored. In these cases, the value of this field will always be Ann6LewA) */
    createdBy: string;
    /** The ID of the bot who created this message, if it was created by a bot */
    createdByBotId?: string;
    /** The ID of the webhook who created this message, if it was created by a webhook */
    createdByWebhookId?: string;
    /** The timestamp that the message was created at. */
    createdAt: number;
    /** The timestamp that the message was updated at, if relevant */
    updatedAt: number;

    constructor(client: Client, payload: GatewayMessagePayload) {
        super(client);

        this.id = payload.message.id;
        this.channelId = payload.message.channelId;
        this.content = payload.message.content;
        this.replyMessageIds = payload.message.replyMessageIds;
        this.createdBy = payload.message.createdBy;
        this.createdByBotId = payload.message.createdByBotId;
        this.createdByWebhookId = payload.message.createdByWebhookId;
        this.createdAt = Date.parse(payload.message.createdAt);
        this.updatedAt = Date.parse(payload.message.updatedAt);
        if (payload.message.isPrivate) this.isPrivate = payload.message.isPrivate;
        if (payload.message.type === "system") this.type = MessageType.System;
    }
}
